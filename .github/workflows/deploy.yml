# .github/workflows/deploy.yml

name: Deploy React App to GitHub Pages

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ "main" ] # Use "main" since you pushed to that branch
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Action to check out your code

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Action to set up Node.js environment
        with:
          node-version: 20 # Use a recent stable Node version (e.g., 20 or higher)
          cache: 'npm' # Enable caching for npm dependencies

      - name: Install Dependencies
        run: npm install # Command to install project packages

      - name: Build Project
        run: npm run build # Command to build your React app (Vite outputs to './dist')
        # Ensure your vite.config.js has base: '/' set

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5 # Action to prepare for Pages deployment

      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3 # Action to upload the built files ('dist' folder)
        with:
          path: './dist' # Tell it where the build output is

  # Deployment job
  deploy:
    # Requires the build job to succeed first
    needs: build

    # Grant GITHUB_TOKEN the permissions required to deploy to GitHub Pages
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Define the deployment environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # The URL of the deployed page

    # Specify the runner environment
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Action to deploy the uploaded artifact